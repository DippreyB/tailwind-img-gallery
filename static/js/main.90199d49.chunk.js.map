{"version":3,"sources":["components/ImageCard.js","components/Accordion.js","components/SearchForm.js","App.js","index.js"],"names":["ImageCard","img","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","id","AccordionWrapper","children","React","useState","accordionID","setAccordionID","toggleCollapse","prevID","Array","isArray","child","cloneElement","isOpen","key","props","Accordion","headerText","color","AccordionBody","ref","useRef","style","height","current","scrollHeight","AccordionHeader","role","onClick","colors","gray","green","red","blue","indigo","purple","yellow","pink","none","SearchForm","handleFormChange","text","setText","imageType","setImageType","order","setOrder","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","htmlFor","name","App","images","setImages","isLoading","setIsLoading","term","searchParams","setSearchParams","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","newTerm","newImageType","newOrder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90199d49.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const ImageCard = ({img}) => {\r\n    const tags = img.tags.split(\",\");\r\n    return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg mx-auto\">\r\n      <img className=\"w-full max-h-full object-cover\" src={img.webformatURL} alt=\"\"/>\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n          Photo by {img.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n             {img.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n             {img.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n             {img.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n          {tags.map(tag => (\r\n              <span key={img.id+tag} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mt-2\">\r\n                #{tag}\r\n            </span>\r\n            ))\r\n          }\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { BsChevronUp,BsChevronDown  } from 'react-icons/bs';\r\n\r\nexport const AccordionWrapper = ({children}) => {\r\n    const [accordionID, setAccordionID] = React.useState('');\r\n    const toggleCollapse = (id) => {\r\n        setAccordionID((prevID) => (prevID !== id ? id : '')); //Set new id when another accord header is clicked.\r\n                                                               //set to '' when we close current open accord\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {Array.isArray(children) ?\r\n                children.map(child => ( //Since we are making accordions in the parent component, we have to clone with props\r\n                    React.cloneElement(child, {isOpen: accordionID, toggleCollapse: toggleCollapse, key: child.props.id})\r\n                )) :\r\n                React.cloneElement(children, {isOpen: accordionID, toggleCollapse: toggleCollapse, key: children.props.id})\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Accordion = ({children, id, isOpen, toggleCollapse, headerText, color}) => (\r\n    <>\r\n        <AccordionHeader id={id} headerText={headerText} toggleCollapse={toggleCollapse} color={color} isOpen={isOpen} />\r\n        <AccordionBody children={children} id={id} isOpen={isOpen} />\r\n    </>\r\n)\r\n\r\n\r\nconst AccordionBody = ({children, id, isOpen}) => {\r\n    const ref = useRef();\r\n    const style = isOpen === id ? {height: ref.current?.scrollHeight} : {height: 0};\r\n    return (\r\n        <div\r\n            id={id}\r\n            className=\"overflow-hidden md: overflow-x-hidden transition-height ease duration-300 text-gray-600\"\r\n            ref={ref}\r\n            style={style}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AccordionHeader = ({id, toggleCollapse, headerText, color, isOpen}) => (\r\n    <div\r\n        role=\"button\"\r\n        id={id}\r\n        onClick={() => toggleCollapse(id)}\r\n        className={colors[color]}\r\n    >\r\n        <div className=\"flex flex-row justify-between\">\r\n            {headerText}\r\n            { isOpen === id ?\r\n                <BsChevronUp/> :\r\n                <BsChevronDown />\r\n            }\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst colors = {\r\n    gray: \"block focus:outline-none bg-gray-800 text-white border-b my-2 p-3\",\r\n    green: \"block focus:outline-none bg-green-600 text-white border-b my-2 p-3\",\r\n    red: \"block focus:outline-none bg-red-800 text-white border-b my-2 p-3\",\r\n    blue: \"block focus:outline-none bg-blue-900 text-white border-b my-2 p-3\",\r\n    indigo: \"block focus:outline-none bg-indigo-900 text-white border-b my-2 p-3\",\r\n    purple: \"block focus:outline-none bg-purple-900 text-white border-b my-2 p-3\",\r\n    yellow: \"block focus:outline-none bg-yellow-400 text-white border-b my-2 p-3\",\r\n    pink: \"block focus:outline-none bg-pink-200 text-gray-800 border-b my-2 p-3\",\r\n    none: \"block focus:outline-none  text-gray-400 border-b my-2 p-3\"\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Accordion, AccordionWrapper } from './Accordion';\r\n\r\nexport const SearchForm = ({handleFormChange}) => {\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const [imageType, setImageType] = useState(\"all\");\r\n    const [order, setOrder] = useState(\"popular\");\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleFormChange(text, imageType, order);\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full max-w-xs md:max-w-md rounded overflow-hidden my-10 mx-auto\">\r\n            <form onSubmit={onSubmit} className=\"w-full\">\r\n                <div className=\"flex items-center border-b-2 border-teal-500 py-2 md:max-w-md w-full\">\r\n\r\n                    <input onChange={e=>setText(e.target.value)} type=\"text\" placeholder=\"Search Image Term...\" className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"/>\r\n\r\n                    <button className=\"flex-shrink-0 bg-green-500 hover:bg-green-700 border-green-500 hover:border-green-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\r\n                        Search\r\n                    </button>\r\n                </div>\r\n\r\n\r\n                <AccordionWrapper > \r\n                    <Accordion id={\"advanced-search\"} headerText={\"Advanced Search\"} color=\"none\">\r\n\r\n                        <div className=\"flex flex-row justify-between flex-wrap\">\r\n                            <div>\r\n                                <label htmlFor={\"image-type\"} className=\"text-gray-700 mr-2\">Image type: </label>\r\n                                <select id={\"image-type\"} name={'image-type'} onChange={e => setImageType(e.target.value)}>\r\n                                    <option value=\"all\">All</option>\r\n                                    <option value=\"photo\">Photo</option>\r\n                                    <option value=\"illustration\">Illustration</option>\r\n                                    <option value=\"vector\">Vector</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor={\"order\"} className=\"text-gray-700 mr-2\">View By: </label>\r\n                                <select id={\"order\"} name={'order'} onChange={e => setOrder(e.target.value)}>\r\n                                    <option value=\"popular\">Popularity</option>\r\n                                    <option value=\"latest\">Most Recent</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </Accordion>\r\n                    \r\n                </AccordionWrapper>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { ImageCard } from './components/ImageCard';\r\nimport { SearchForm } from './components/SearchForm';\r\n\r\nfunction App() {\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchParams, setSearchParams] = useState ( {\r\n    term: \"\",\r\n    imageType: \"all\",\r\n    order: \"popular\",\r\n  })\r\n\r\n  const handleFormChange = (newTerm, newImageType, newOrder) => {\r\n    setSearchParams({\r\n      ...searchParams,\r\n      term: newTerm,\r\n      imageType: newImageType, \r\n      order: newOrder,\r\n    })\r\n  }\r\n  \r\n  \r\n  useEffect( () => { \r\n    const CORS = \"https://secret-ocean-49799.herokuapp.com/\";\r\n    fetch(`https://secret-ocean-49799.herokuapp.com/https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${searchParams.term}&image_type=${searchParams.imageType}&pretty=true&order=${searchParams.order}`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setImages(data.hits);\r\n      setIsLoading(false);\r\n    })\r\n    .catch(err => console.log(err));\r\n  },[searchParams])\r\n\r\n  return (\r\n   \r\n    <div className=\"flex flex-col container mx-auto\">\r\n      <h1 className=\"text-4xl text-purple-500 text-center mt-4 font-sans\">Pixabay API Search</h1>\r\n      <SearchForm handleFormChange={handleFormChange} />\r\n      {isLoading ? \r\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading</h1> : \r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 md:w-all md:max-w-full max-w-xs gap-4 mb-10 mx-auto\">\r\n          { images.map(img => (\r\n            <ImageCard key={img.id} img={img}/>\r\n            ))\r\n          }\r\n      </div>\r\n     }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './assets/main.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}